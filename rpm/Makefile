# This file is part of tcollector.
# Copyright (C) 2011  The tcollector Authors.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser
# General Public License for more details.  You should have received a copy
# of the GNU Lesser General Public License along with this program.  If not,
# see <http://www.gnu.org/licenses/>.

# This Makefile is a complete train wreck.  I'm sorry.  --tsuna


ifeq ($(PACKAGE_VERSION),)
PACKAGE_VERSION := 0.1.0
endif

RPM_REVISION := 1

# In some environment this command can be called `gsha1sum' or `digest'.
SHA1SUM := sha1sum
PYTHON_VERSION := 2.6
PYTHON := python$(PYTHON_VERSION)

# Our "source tree" is in the parent directory, always.
VPATH := ..

git_version := \
  `git rev-list --pretty=format:%h HEAD --max-count=1 | sed 1d || echo unknown`
git_fullsha1 := \
  `git rev-list --pretty=format:%H HEAD --max-count=1 | sed 1d || echo unknown`

# What / where do we build.
RPM_TARGET := noarch
BASENAME := xcollector-$(PACKAGE_VERSION)-$(RPM_REVISION)
RPM := $(BASENAME).$(RPM_TARGET).rpm

all: clean rpm

rpm:
	mkdir -p build
	mkdir -p dist
	set -e; { \
          echo "# File generated by Makefile, do not edit"; \
	  sed \
            -e 's/@PACKAGE_VERSION@/$(PACKAGE_VERSION)/' \
            -e 's/@PYTHON_VERSION@/$(PYTHON_VERSION)/' \
            -e "s/@GIT_SHORTSHA1@/$(git_version)/" \
            -e "s/@GIT_FULLSHA1@/$(git_fullsha1)/" \
            -e 's/@RPM_TARGET@/$(RPM_TARGET)/' \
            -e 's/@RPM_REVISION@/$(RPM_REVISION)/' \
	    xcollector.spec; \
        } > build/xcollector-t.spec
	rpmbuild --define "_topdir %(pwd)/build" -bb build/xcollector-t.spec
	if test -f build/RPMS/$(RPM_TARGET)/$(RPM); then mv build/RPMS/$(RPM_TARGET)/$(RPM) ./dist/; else mv xcollector.$(RPM_TARGET).rpm $(RPM); fi

clean:
	rm -rf build dist

.PHONY: all rpm clean distclean
.SUFFIXES: .spec .rpm
